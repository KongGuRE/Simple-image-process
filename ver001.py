# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ver001.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(807, 618)
        MainWindow.setStyleSheet("background-color: rgb(37, 37, 38);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.widget = myWindow()
        self.widget.setObjectName("widget")
        self.gridLayout_2.addWidget(self.widget, 2, 0, 1, 1)
        self.listView = QtWidgets.QListView(self.centralwidget)
        self.listView.setMaximumSize(QtCore.QSize(150, 16777215))
        self.listView.setObjectName("listView")
        self.gridLayout_2.addWidget(self.listView, 2, 1, 1, 1)
        self.gridWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridWidget.setMinimumSize(QtCore.QSize(0, 60))
        self.gridWidget.setMaximumSize(QtCore.QSize(16777215, 60))
        self.gridWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.gridWidget.setStyleSheet("background-color: rgb(45, 45, 48);")
        self.gridWidget.setObjectName("gridWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridWidget)
        self.gridLayout.setSpacing(6)
        self.gridLayout.setObjectName("gridLayout")
        self.btn_test = QtWidgets.QPushButton(self.gridWidget)
        self.btn_test.setMinimumSize(QtCore.QSize(50, 20))
        self.btn_test.setMaximumSize(QtCore.QSize(50, 20))
        self.btn_test.setObjectName("btn_test")
        self.gridLayout.addWidget(self.btn_test, 0, 0, 1, 1)
        self.btn_dirpath = QtWidgets.QPushButton(self.gridWidget)
        self.btn_dirpath.setMinimumSize(QtCore.QSize(50, 10))
        self.btn_dirpath.setMaximumSize(QtCore.QSize(50, 25))
        self.btn_dirpath.setObjectName("btn_dirpath")
        self.gridLayout.addWidget(self.btn_dirpath, 0, 3, 1, 1)
        self.le_test = QtWidgets.QLineEdit(self.gridWidget)
        self.le_test.setMaximumSize(QtCore.QSize(50, 20))
        self.le_test.setObjectName("le_test")
        self.gridLayout.addWidget(self.le_test, 0, 1, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 1, 0, 1, 4)
        self.gridLayout_2.addWidget(self.gridWidget, 0, 0, 1, 2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 807, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.btn_test.clicked.connect(self.btn_test_clicked)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.btn_test.setText(_translate("MainWindow", "Test"))
        self.btn_dirpath.setText(_translate("MainWindow", "Path"))
        self.le_test.setText(_translate("MainWindow", "1.jpg"))

    def btn_test_clicked(self, event):
        self.widget.input_image(self.le_test.text())
        self.widget.display_imgPainter()


from test3 import myWindow

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
